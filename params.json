{"name":"Sturns","tagline":"A scroll plugin for pc or mobile.","body":"<head><style type=\"text/css\" rel=\"stylesheet\">\r\n        .s_turns{\r\n            width: 100%;\r\n            overflow: hidden;\r\n            position: relative;\r\n        }\r\n        .s_turnsLists>div{\r\n            float: left;\r\n        }\r\n        .s_turnsLists,.s_turnsListsV{\r\n            overflow: hidden;\r\n            width: 100%;\r\n        }\r\n        .s_turnsListsV>div{\r\n            display: block;\r\n        }\r\n        .transition2s{\r\n            -webkit-transition:  all .3s ease-out;\r\n            -moz-transition:  all .3s ease-out;\r\n            transition: all .3s ease-out;\r\n        }\r\n\r\n\r\n        .s_indicator {\r\n            height: 20px!important;\r\n            margin: 0 auto;\r\n            position: absolute;\r\n            width: 100%;\r\n            bottom: 0px;\r\n        }\r\n\r\n        .s_turnsPointerClass{\r\n            width: 10px!important;\r\n            height: 10px!important;\r\n            border-radius: 5px!important;\r\n            background-color: rgba(0,0,0,0.3)!important;\r\n            z-index: 999!important;\r\n        }\r\n\r\n        .s_indicator>div>div {\r\n            float: left;\r\n            margin-left: 5px;\r\n        }\r\n\r\n        .s_indicator>div {\r\n            margin: 0 auto;\r\n            background-color: transparent!important;\r\n            max-width: 90%;\r\n            background-image: transparent!important;\r\n        }\r\n        .s_indi_active{\r\n            background-color: rgba(0,0,0,0.7)!important;\r\n        }\r\n\r\n        /***demo css***/\r\n        body{background-color: #ffffff;margin:0;padding:0;font-size:16px;box-sizing:border-box;color: rgb(50,50,50);}a,li,p,div,ul,nav,span,img,header{-webkit-user-select:none;user-select:none;-webkit-text-size-adjust:none;text-size-adjust:none;outline:0;/* padding: 10px; */}li{list-style:none;border:0}\r\n\r\n        .singleDemo,.singleDemoCenter,.singleDemoV,.singleDemoVCenter{\r\n            height: 150px;\r\n        }\r\n\r\n        div,p,body{\r\n            -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n            font-family: Helvetica,STHeiti STXihei, Microsoft JhengHei, Microsoft YaHei, Arial;\r\n        }\r\n        body{\r\n            padding: 20px;\r\n            background-color: rgb(140, 209, 255);\r\n        }\r\n\r\n        .singleDemo>div,.singleDemoCenter>div,.singleDemoV>div,.singleDemoVCenter>div{\r\n            height: 150px;\r\n            text-align: center;\r\n        }\r\n        .s_turnsLists>div,.s_turnsListsV>div{\r\n            background-image: -webkit-linear-gradient(45deg, #CAE1FF, #A1BBFF);\r\n            background-image: -moz-linear-gradient(45deg, #CAE1FF, #A1BBFF);\r\n            background-image: -ms-linear-gradient(45deg, #CAE1FF, #A1BBFF);\r\n            background-image: -o-linear-gradient(45deg, #CAE1FF, #A1BBFF);\r\n            background-image: linear-gradient(45deg, #CAE1FF, #A1BBFF);\r\n        }\r\n        .picDemo img{\r\n            width: 100%;\r\n            height: 150px;\r\n            border-left: 1px solid #FFF;\r\n        }\r\n\r\n        .picDemo{\r\n            height: 150px;\r\n        }\r\n        .demo{\r\n            margin-bottom: 50px;\r\n            max-width: 640px;\r\n            margin: 50px auto;\r\n        }\r\n        .singleDemo>div>div:nth-child(2){\r\n            background-color: #aaaaff;\r\n        }\r\n        .singleDemo>div>div:nth-child(3){\r\n            background-color: #e1ba53;\r\n        }\r\n        .sturns_active{\r\n            color:#FFF!important;\r\n            transition: all .4s;\r\n        }\r\n        .singleDemo p,.singleDemoCenter p,.singleDemoV p,.singleDemoVCenter p{\r\n            line-height: 150px;\r\n            font-size: 38px;\r\n            margin: 0;\r\n        }\r\n\r\n        #prev,#next{\r\n            line-height: 30px;\r\n            border: 1px solid #ace;\r\n            width: 40px;\r\n        }\r\n        #btns{\r\n            margin: 20px auto;\r\n            text-align: center;\r\n        }\r\n\r\n        .pp{\r\n            width: 15px;\r\n            height: 15px;\r\n            background-color: yellowgreen;\r\n        }\r\n\r\n        .pac{\r\n            background-color: yellow;\r\n        }\r\n        .activeC{\r\n            background-color: #e1ba53!important;\r\n        }\r\n        .pos{\r\n            top: 20px;\r\n        }\r\n\r\n        pre{\r\n            background-color: rgb(64,64,64);\r\n            color: #FFF;\r\n            padding: 10px;\r\n            overflow: scroll;\r\n            font-size: 14px;\r\n            text-indent:-2em;\r\n            font-family: Helvetica,STHeiti STXihei, Microsoft JhengHei, Microsoft YaHei, Arial;\r\n        }\r\n        .spec{\r\n            color: rgb(202,158,77);\r\n        }\r\n        .string{\r\n            color: rgb(52,174,52);\r\n        }\r\n        .temp{\r\n            color: rgb(155,194,142);\r\n        }\r\n        .num{\r\n            color: rgb(250,113,187);\r\n        }\r\n        h1{\r\n            text-align: center;\r\n            color: #FFF;\r\n            line-height: 70px;\r\n            border-bottom: 1px solid #FFF;\r\n        }\r\n\r\n        .settings,.events,.propertys {\r\n            color: #FFF;\r\n        }\r\n\r\n        .pros {\r\n            padding: 10px;\r\n            border-bottom: 1px solid #FFF;\r\n        }\r\n        footer{\r\n            text-align: center;\r\n            font-size: 13px;\r\n            padding: 100px 0;\r\n            color: #FFF;\r\n        }\r\n    </style></head>\r\n<body>\r\n<h1>Sturns demo</h1>\r\n\r\n     <div class=\"singleDemo demo\">\r\n        <div>\r\n            <div><p>1</p></div>\r\n            <div><p>2</p></div>\r\n            <div><p>3</p></div>\r\n            <div><p>4</p></div>\r\n        </div>\r\n    </div>\r\n    <pre>\r\n        <span class=\"spec\">var </span><span class=\"temp\">singleDemoCenter</span> =<span class=\"spec\"> new</span> Sturns(<span class=\"string\">\".singleDemo\"</span>);\r\n    </pre>\r\n\r\n    <div class=\"singleDemoCenter demo\">\r\n        <div>\r\n            <div><p>1</p></div>\r\n            <div><p>2</p></div>\r\n            <div><p>3</p></div>\r\n            <div><p>4</p></div>\r\n        </div>\r\n    </div>\r\n\r\n    <pre>\r\n        <span class=\"spec\">var </span><span class=\"temp\">singleDemoCenter</span> =<span class=\"spec\"> new</span> Sturns(<span class=\"string\">\".singleDemoCenter\"</span>,{\r\n            autoplay: <span class=\"spec\">false</span>,\r\n            centerMode : <span class=\"spec\">true</span>,\r\n            circle:<span class=\"spec\">false</span>,\r\n        });\r\n    </pre>\r\n\r\n    <div class=\"singleDemoV demo\">\r\n        <div>\r\n            <div><p>1</p></div>\r\n            <div><p>2</p></div>\r\n            <div><p>3</p></div>\r\n            <div><p>4</p></div>\r\n        </div>\r\n    </div>\r\n     <pre>\r\n         <span class=\"spec\">var </span><span class=\"temp\">singleDemoV</span> =<span class=\"spec\"> new</span> Sturns(<span class=\"string\">\".singleDemoV\"</span>,{\r\n            autoplay: <span class=\"spec\">false</span>,\r\n            circle : <span class=\"spec\">false</span>,\r\n            isVertical:<span class=\"spec\">true</span>,\r\n            pointer:<span class=\"spec\">false</span>,\r\n            onScroll:<span class=\"spec\">function</span>(idx,obj){\r\n                console.log(<span class=\"string\">\"第\"</span>+idx+<span class=\"string\">\"页， moveX: \"</span>+obj.moveX+<span class=\"string\">\" moveY: \"</span>+obj.moveY);\r\n            }\r\n        });\r\n    </pre>\r\n\r\n\r\n\r\n    <div class=\"singleDemoVCenter demo\">\r\n         <div>\r\n             <div><p>1</p></div>\r\n             <div><p>2</p></div>\r\n             <div><p>3</p></div>\r\n             <div><p>4</p></div>\r\n         </div>\r\n     </div>\r\n     <pre>\r\n        <span class=\"spec\">var </span><span class=\"temp\">singleDemoVCenter</span> =<span class=\"spec\"> new</span> Sturns(<span class=\"string\">\".singleDemoVCenter\"</span>,{\r\n            autoplay: <span class=\"spec\">false</span>,\r\n            centerMode : <span class=\"spec\">true</span>,\r\n            isVertical:<span class=\"spec\">true</span>,\r\n        });\r\n    </pre>\r\n\r\n     <div class=\"picDemo demo\">\r\n         <div>\r\n             <div>\r\n                 <img src=\"../images/2.png\"/>\r\n             </div>\r\n             <div>\r\n                 <img src=\"../images/2.png\"/>\r\n             </div>\r\n             <div>\r\n                 <img src=\"../images/2.png\"/>\r\n             </div>\r\n         </div>\r\n     </div>\r\n     <pre>\r\n         <span class=\"spec\">var </span><span class=\"temp\">picDemo</span> =<span class=\"spec\"> new</span> Sturns(<span class=\"string\">\".picDemo\"</span>,{\r\n            centerMode: <span class=\"spec\">true</span>,\r\n            isVertical : <span class=\"spec\">false</span>,\r\n            centerModeScale:<span class=\"num\">0.6</span>,\r\n        });\r\n    </pre>\r\n\r\n    <h1>Settings</h1>\r\n\r\n    <div class=\"settings\">\r\n        <div class=\"pros\">\r\n            <p>activeClass</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> sturns_active</p>\r\n            <p>设置当前焦点页的样式类名</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>animate</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>轮播时，是否使用动画</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>autoplay</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>是否自动轮播</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>autoplaySpeed</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p><strong>默认:</strong> 3000</p>\r\n            <p>轮播的间隔时间</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>boundary</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p><strong>默认:</strong> 显示区域宽度的1/6</p>\r\n            <p>滑动页面时触发翻动的临界值</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>centerMode</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> false</p>\r\n            <p>是否初始化为居中模式</p>\r\n        </div>\r\n\r\n        <div class=\"pros\">\r\n            <p>centerMode</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> false</p>\r\n            <p>是否初始化为居中模式</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>centerModeScale</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p><strong>默认:</strong> 1</p>\r\n            <p>初始化为居中模式时候页面居中时候的缩放比</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>circle</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>是否初始化为循环模式</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>during</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p><strong>默认:</strong> 400</p>\r\n            <p>页面轮播时的动画持续时间</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>centerMode</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> false</p>\r\n            <p>是否初始化为居中模式</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>direction</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> ltr</p>\r\n            <p>自动轮播时，ltr:从左向右（从上向下），rtl:从右向左（从下向上）</p>\r\n        </div>\r\n\r\n        <div class=\"pros\">\r\n            <p>hoverStop</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>当鼠标悬停与轮播区域之上，是否停止自动轮播</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>isVertical</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> false</p>\r\n            <p>是否初始化为垂直轮播模式</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>pointer</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>是否自动生成页面指示器</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>pointerActiveClass</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> s_indi_active</p>\r\n            <p>当前页面指示器的样式类名</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>pointerClass</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> s_turnsPointerClass</p>\r\n            <p>页面指示器的默认样式类名</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>pointerPosition</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> s_indicator</p>\r\n            <p>页面指示器的位置样式类名</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>preventDefault</p>\r\n            <p><strong>类型:</strong> boolean</p>\r\n            <p><strong>默认:</strong> true</p>\r\n            <p>是否在滑动时，阻止默认事件</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>timingFn</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> ease-out</p>\r\n            <p>轮播时，动画应用的动画时间函数，有ease，ease-in，ease-out，ease-in-out，还可以自行指定贝塞尔曲线函数，如：cubic-bezier(n,n,n,n)</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>direction</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> ltr</p>\r\n            <p>自动轮播时，ltr:从左向右（从上向下），rtl:从右向左（从下向上）</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>direction</p>\r\n            <p><strong>类型:</strong> string</p>\r\n            <p><strong>默认:</strong> ltr</p>\r\n            <p>自动轮播时，ltr:从左向右（从上向下），rtl:从右向左（从下向上）</p>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <h1>Propertys</h1>\r\n    <div class=\"propertys\">\r\n        <div class=\"pros\">\r\n            <p>currentIndex</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p>当前页面序号</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>mainEleW</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p>轮播区域的宽度</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>mainEleW</p>\r\n            <p><strong>类型:</strong> number</p>\r\n            <p>轮播区域的高度</p>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <h1>Events</h1>\r\n    <div class=\"events\">\r\n        <div class=\"pros\">\r\n            <p>onScroll</p>\r\n            <p><strong>类型:</strong> function</p>\r\n            <p><strong>默认:</strong> undefined</p>\r\n            <p>轮播时的回调函数</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>onScrollBeforeStart</p>\r\n            <p><strong>类型:</strong> function</p>\r\n            <p><strong>默认:</strong> undefined</p>\r\n            <p>轮播前的回调函数</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>onScrollEnd</p>\r\n            <p><strong>类型:</strong> function</p>\r\n            <p><strong>默认:</strong> undefined</p>\r\n            <p>轮播完成后的回调函数</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>onScrollStart</p>\r\n            <p><strong>类型:</strong> function</p>\r\n            <p><strong>默认:</strong> undefined</p>\r\n            <p>轮播开始时的回调函数</p>\r\n        </div>\r\n    </div>\r\n\r\n    <h1>Function</h1>\r\n    <div class=\"events\">\r\n        <div class=\"pros\">\r\n            <p>prev</p>\r\n            <p>轮播到上一页</p>\r\n        </div>\r\n        <div class=\"pros\">\r\n            <p>next</p>\r\n            <p>轮播到下一页</p>\r\n        </div>\r\n    </div>\r\n\r\n<!--<script type=\"text/javascript\" src=\"../src/sLib.js\"></script>\r\n<script type=\"text/javascript\" src=\"../src/sturns.js\"></script>\r\n<script type=\"text/javascript\" src=\"../src/demo.js\"></script>-->\r\n<script type=\"text/javascript\">\r\n/*\r\n Version: 1.0.1\r\n Author: Schoeu\r\n update: 2015/3/3\r\n Website: http://schoeu.com\r\n Docs: http://schoeu.github.io/sturns\r\n Repo: http://github.com/schoeu/sturns\r\n Issues: http://github.com/schoeu/sturns/issues\r\n */\r\n\r\nvoid function (window,s,undefined){\r\n    'use strict';\r\n\r\n    //兼容AMD模式\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(s);\r\n    } else if (typeof exports !== 'undefined') {\r\n        module.exports = s(window,undefined);\r\n    } else {\r\n        //绑定全局变量window\r\n        window.Sturns || (window.Sturns = s(window,undefined));\r\n    }\r\n\r\n}(window,function(window,undefined){\r\n    'use strict';\r\n\r\n    var Sturns = function(selector,options){\r\n        var centerModeScale;\r\n\r\n        options = options || {};\r\n\r\n        this.mainEle = document.querySelector(selector);\r\n\r\n        //如果主元素传参有误，则直接返回。\r\n        if(!this.mainEle){\r\n            return;\r\n        }\r\n\r\n        //滚动区域的宽度\r\n        this.mainEleW = this.mainEle.offsetWidth;\r\n\r\n        //滚动区域的高度\r\n        this.mainEleH = this.mainEle.offsetHeight;\r\n\r\n        //滚动页的父元素\r\n        this.scrollEle = this.mainEle.children[0];\r\n\r\n        //滚动页的所有元素\r\n        this.pages = this.scrollEle.children;\r\n\r\n        //当前页序号\r\n        this.currentIndex = 0;\r\n\r\n        //滚动页宽度\r\n        this.pageWidth = this.pages[0].offsetWidth;\r\n\r\n        //滚动页高度\r\n        this.pageHeight = this.pages[0].offsetHeight;\r\n\r\n        //是否已经滚动到边界\r\n        this.isBoundary = true;\r\n\r\n        //滚动也的个数，不包含克隆的元素节点\r\n        this.length = this.scrollEle.children.length;\r\n        this.prevPageIdx = 1;\r\n        if(typeof options === \"object\"){\r\n            //水平滚动的方向\r\n            // ltr：左到右   rtl：右到左  默认为从左到右\r\n            this.direction = options.direction || \"ltr\";\r\n            //滚动时的回调函数\r\n            this.onScroll = options.onScroll || undefined;\r\n            //当前页滚动完成的回调函数\r\n            this.onScrollEnd = options.onScrollEnd || undefined;\r\n            //当前页滚动开始时的回调函数\r\n            this.onScrollStart = options.onScrollStart || undefined;\r\n            //当前页滚动开始之前的回调函数\r\n            this.onScrollBeforeStart = options.onScrollBeforeStart || undefined;\r\n            //是否自动轮播 Boolean值\r\n            this.autoplay = options.autoplay === false ? false : true;\r\n\r\n            //水平滚动 or 垂直滚动\r\n            this.isVertical = options.isVertical === true ? true : false;\r\n\r\n            //当前页滚动多少像素则判定滑到下一页，\r\n            // int值，默认为当前页宽度的六分之一。\r\n            this.boundary = parseInt(options.boundary) || (this.isVertical ? this.mainEleH : this.mainEleW)/6;\r\n            this.prevBoundary = this.boundary;   //用于换页时判断是否循环\r\n\r\n            //鼠标悬停在插件区域则停止自动轮播， Boolean值\r\n            this.hoverStop = options.hoverStop === false ? false : true;\r\n\r\n            //是否启用居中模式，默认为不启用。\r\n            // 启用后当前页的左右两边可以看到前一个和后一个滚动页的一边。\r\n            this.centerMode = options.centerMode === true ? true : false;\r\n\r\n            //滚动时使用启用动画，默认为启用\r\n            this.animate = options.animate === false ? false : true;\r\n\r\n            //是否启用滚动页指示器，默认为true\r\n            this.pointer = options.pointer === false ? false : true;\r\n\r\n            //默认的滚动页指示器小圆点的样式， 传入CSS样式类名字符串。\r\n            this.pointerClass = options.pointerClass || \"s_turnsPointerClass\";\r\n\r\n            //当前的滚动页的样式， 传入CSS样式类名字符串。\r\n            this.activeClass = options.activeClass || \"sturns_active\";\r\n\r\n            //当前的滚动页指示器小圆点的样式， 传入CSS样式类名字符串。\r\n            this.pointerActiveClass = options.pointerActiveClass || \"s_indi_active\";\r\n\r\n            //滚动页指示器的整体位置，传入CSS样式类名字符串\r\n            this.pointerPosition = options.pointerPosition || \"s_indicator\";\r\n\r\n            //是否启用循环模式，默认为启用\r\n            this.circle = options.circle === false ? false : true;\r\n\r\n            //启用居中模式后，当前页与非居中模式页面的宽度比\r\n            //范围为0~1之间的小数，默认为 0.85\r\n            centerModeScale = options.centerModeScale || 0.85;\r\n            this.centerModeScale = centerModeScale > 1 ? 1 : centerModeScale;\r\n\r\n            //动画缓动曲线\r\n            this.timingFn = options.timingFn || \"ease-out\";\r\n\r\n            //动画持续时长\r\n            this.during = (options.during || 400);\r\n            this.duringSec = this.during/1000;\r\n\r\n            //自动轮播的时间间隔，以毫秒为单位\r\n            this.autoplaySpeed = (options.autoplaySpeed || 3000) + this.during;\r\n\r\n            //滑动时是否阻止默认事件\r\n            this.preventDefault = options.preventDefault === false ? false : true;\r\n\r\n        }\r\n\r\n        //插件初始化\r\n        this.init();\r\n    }\r\n\r\n    Sturns.prototype.init = function(){\r\n        var that = this,\r\n                scrollEleCls = that.isVertical ? \"s_turnsListsV\" : \"s_turnsLists\";\r\n\r\n        that.mainEle.classList.add(\"s_turns\");\r\n        that.scrollEle.classList.add(scrollEleCls);\r\n\r\n        that.clipWidth = 0;\r\n        that.clipHeight = 0;\r\n        that.clipSize = 0;\r\n\r\n        that.moveRange = 0;\r\n\r\n        //居中模式时，当前页大小\r\n        if(that.centerMode){\r\n            if(that.isVertical){\r\n                that.pageHeight = that.mainEleH * that.centerModeScale;\r\n                that.clipHeight = +((that.mainEleH * (1-that.centerModeScale)/2).toFixed(1));\r\n            }else{\r\n                that.pageWidth = that.mainEleW * that.centerModeScale;\r\n                that.clipWidth = +((that.mainEleW * (1-that.centerModeScale)/2).toFixed(1));\r\n            }\r\n\r\n            that.clipSize = that.isVertical ? that.clipHeight : that.clipWidth;\r\n\r\n        }else{\r\n            that.centerModeScale = 1;\r\n        }\r\n\r\n        //滚动页大小\r\n        that.pageSize = that.isVertical ? that.pageHeight : that.pageWidth;\r\n\r\n        //公用修正\r\n        that.fix();\r\n\r\n        //特征检测\r\n        that.supports = (function(){\r\n            var u = navigator.userAgent;\r\n            var obj = {\r\n                //内核\r\n                isTrident: u.indexOf('Trident') > 0,\r\n                isPresto: u.indexOf('Presto') > 0,\r\n                isWebKit: u.indexOf('AppleWebKit') > 0,\r\n                //浏览器\r\n                isIE: u.indexOf('MSIE') > 0,\r\n                isFirefox: u.indexOf('Firefox') > 0,\r\n                isOpera: u.indexOf('Opera')>0 || u.indexOf('OPR') > 0,\r\n                isChrome:u.indexOf('Chrome') > 0 || u.indexOf('CriOS') > 0,\r\n                //系统或平台\r\n                isAndroid:/android/ig.test(u),\r\n                isIPhone: /iphone/ig.test(u),\r\n                isIPad:/ipad/ig.test(u),\r\n            }\r\n            //设备\r\n            obj.isMobile = u.indexOf('Mobi')>0 || obj.isIPhone || obj.isAndroid || obj.isIPad  ||u.indexOf('480')>0;\r\n            obj.isTablet = u.indexOf('Tablet')>0 || obj.isIPad || u.indexOf('Nexus 7')>0;\r\n\r\n            //事件检测\r\n            obj.isTouchPad = (/hp-tablet/gi).test(u);\r\n            obj.hasTouch = 'ontouchstart' in window && !obj.isTouchPad;\r\n\r\n            obj.evtStart = obj.hasTouch ? \"touchstart\" : \"mousedown\";\r\n            obj.evtMove = obj.hasTouch ? \"touchmove\" : \"mousemove\";\r\n            obj.evtEnd = obj.hasTouch ? \"touchend\" : \"mouseup\";\r\n            obj.translate = obj.hasTouch ? \"WebkitTransform\" : \"transform\";\r\n\r\n            return obj;\r\n        })();\r\n\r\n        //惰性加载\r\n        that.setTransFn = (function(){\r\n            if(that.isVertical){\r\n                return function(num){\r\n                    that.scrollEle.style[that.supports.translate] = \"translate3d(0px,\"+ num +\"px,0px)\";\r\n                }\r\n            }else{\r\n                return function(num){\r\n                    that.scrollEle.style[that.supports.translate] = \"translate3d(\"+ num +\"px,0px,0px)\";\r\n                }\r\n            }\r\n        })();\r\n\r\n        //that.currentPage = -that.pageWidth*(that.centerMode ? 2 : 1);\r\n        that.currentPage = -that.fix.fixTOPage;\r\n        //使初始化的第一页为非克隆页\r\n        that.setTransFn(-that.fix.fixTOPage+that.clipSize);\r\n        that.currentIndex = Math.abs((that.currentPage+that.fix.fixOZPage)/that.pageSize);\r\n\r\n\r\n        //启动滑动监听\r\n        that.move();\r\n\r\n        //标记\r\n        that.each(that.scrollEle.children,function(idx){\r\n            this.setAttribute(\"data-sturns-index\",idx+1);\r\n        });\r\n\r\n        //克隆前后两个元素并添加到容器中\r\n        var tempLastele = that.scrollEle.lastElementChild.cloneNode(true),\r\n                tempFirstele = that.scrollEle.firstElementChild.cloneNode(true);\r\n        that.scrollEle.insertBefore(tempLastele,that.scrollEle.firstElementChild);\r\n        that.scrollEle.appendChild(tempFirstele);\r\n\r\n        that.centerMode && fixCenterMode.call(that,that);\r\n\r\n        //设置每个滚动也的宽度为页面宽度\r\n        that.each(that.pages,function(idx){\r\n            that.isVertical ?\r\n                    this.style.height = that.pageHeight+\"px\" :\r\n                    this.style.width = that.pageWidth+\"px\";\r\n        });\r\n\r\n        //设置滚动页父容器的宽度\r\n        //that.scrollEle.style.width = (that.centerMode? that.length+4 : that.length+2) * that.pageWidth+\"px\";\r\n        that.isVertical ?\r\n                that.scrollEle.style.height = (that.centerMode? that.length+4 : that.length+2) * that.pageHeight+\"px\" :\r\n                that.scrollEle.style.width = (that.centerMode? that.length+4 : that.length+2) * that.pageWidth+\"px\";\r\n\r\n        that.scrollEle.lastElementChild.classList.add(\"s_turnsClone\");\r\n        that.scrollEle.firstElementChild.classList.add(\"s_turnsClone\");\r\n\r\n        //开始轮播\r\n        that.start();\r\n\r\n        that.scrollEle.children[that.centerMode ? 2 : 1].classList.add(that.activeClass)\r\n\r\n        //如果启用指示器则初始化指示器\r\n        that.pointer && that.indicator();\r\n\r\n        //如果制定了指示器类名则开始初始化指示器位置\r\n        that.s_indicator && that.pointerPosition && that.s_indicator.parentNode.classList.add(that.pointerPosition);\r\n\r\n        that.run = run;\r\n\r\n        //that.sUtils = sUtils;\r\n    };\r\n\r\n    //滑动事件处理\r\n    Sturns.prototype.move = function(){\r\n        var that = this,isDown = false,\r\n                downX = 0, downY= 0,  //按下鼠标或者开始触摸时的坐标\r\n                moveX = 0,moveY = 0,    //按下鼠标或者开始触摸后移动的坐标\r\n                changeX = 0,changeY = 0;    //上两组数据之间变化的差值\r\n\r\n        //开始拖拽事件监听\r\n        that.mainEle.addEventListener(that.supports.evtStart,function(e){\r\n            isDown = true;\r\n            downX = that.supports.hasTouch ? e.touches[0].clientX : e.clientX;\r\n            downY = that.supports.hasTouch ? e.touches[0].clientY : e.clientY;\r\n            that.stop();\r\n        });\r\n\r\n        //拖拽时事件监听器\r\n        that.mainEle.addEventListener(that.supports.evtMove,function(e){\r\n\r\n            //判断是否拖拽状态\r\n            if(isDown){\r\n                moveX = that.supports.hasTouch ? e.touches[0].clientX : e.clientX;\r\n                moveY = that.supports.hasTouch ? e.touches[0].clientY : e.clientY;\r\n                changeX = moveX - downX;\r\n                changeY = moveY - downY;\r\n                that.setTransFn(that.currentPage+(that.isVertical ? changeY : changeX)+that.clipSize);\r\n                that.onScroll && that.onScroll.call(that,that.currentIndex,{moveX:moveX,moveY:moveY});\r\n            }\r\n            //阻止默认事件\r\n            that.preventDefault && e.preventDefault();\r\n        });\r\n\r\n        //拖拽事件结束监听\r\n        that.mainEle.addEventListener(that.supports.evtEnd,function(e){\r\n            isDown = false;\r\n\r\n            //如果不是无缝轮播的情况下： 轮播到第一页则再不能左划，最后一页则不能右划\r\n            if(!that.circle){\r\n                if((that.currentIndex === 1 && that.isBoundary && (that.isVertical ? changeY : changeX) > 0) ||\r\n                        (that.currentIndex === that.length && that.isBoundary && (that.isVertical ? changeY : changeX) < 0)){\r\n                    that.boundary = that.mainEleW;\r\n                }\r\n            }\r\n\r\n            //滑动时判定边界\r\n            if(Math.abs((that.isVertical ? changeY : changeX)) > that.boundary){\r\n                (that.isVertical ? changeY : changeX) > 0 ? that.prev() : that.next();\r\n            }else{\r\n                that.animate && that.ani();\r\n                that.setTransFn(that.currentPage+that.clipSize);\r\n            }\r\n\r\n            !that.circle && that.isBoundary && (that.boundary = that.prevBoundary);\r\n\r\n            that.start();\r\n        });\r\n\r\n        //用于hoverStop事件，只针对PC\r\n        that.mainEle.addEventListener(\"mouseover\",function(){\r\n            if(that.hoverStop){\r\n                that.stop();\r\n            }\r\n        });\r\n        that.mainEle.addEventListener(\"mouseleave\",function(){\r\n            that.start();\r\n        });\r\n    }\r\n\r\n    //兼容模块  TODO\r\n    Sturns.prototype.fix = function(){\r\n        this.fix = {\r\n            fixTOPage : (this.centerMode?2:1) * this.pageSize,\r\n            fixOZ : this.centerMode?1:0,\r\n            fixOZPage : (this.centerMode?1:0) * this.pageSize\r\n        }\r\n    }\r\n\r\n    //补间模块\r\n    Sturns.prototype.ani = function(){\r\n        var _ = this;\r\n        //this.scrollEle.classList.add(\"transition2s\");\r\n        _.scrollEle.style.WebkitTransition = \"all \"+ _.duringSec +\"s \"+ _.timingFn;\r\n        setTimeout(function(){\r\n            //_.scrollEle.classList.remove(\"transition2s\");\r\n            _.scrollEle.style.WebkitTransition = \"\";\r\n        },_.during)\r\n    }\r\n\r\n    //scrollBy 滚动多少距离\r\n    Sturns.prototype.scrollBy = function(pxNum){\r\n        this.animate && this.ani();\r\n        this.setTransFn(this.currentPage+pxNum);\r\n    };\r\n\r\n    //scrollTo 滚动到哪里\r\n    Sturns.prototype.scrollTo = function(pxNum){\r\n        this.animate && this.ani();\r\n        this.setTransFn(pxNum);\r\n    };\r\n\r\n    //scrollTo 滚动到指定页\r\n    Sturns.prototype.scrollToPage = function(pageNum){\r\n        this.animate && this.ani();\r\n        //var realPageNum = this.length-(this.centerMode?4 : 2);\r\n        pageNum = pageNum > this.length ? this.length : pageNum;\r\n\r\n        this.setTransFn(this.clipSize-this.pageSize*(pageNum+this.fix.fixOZ));\r\n\r\n        this.currentPage = -this.pageSize*(pageNum+this.fix.fixOZ);\r\n    };\r\n\r\n    //开始动画\r\n    Sturns.prototype.start = function(){\r\n        var _ = this;\r\n        if(_.hoverStop && _.autoplay){\r\n            _.stop();\r\n            _.timer = setInterval(function(){_.run(_)},_.autoplaySpeed);\r\n        }\r\n    };\r\n\r\n    //滚动指示器初始化\r\n    Sturns.prototype.indicator = function(){\r\n        var _ = this,insertHtml = \"\";\r\n\r\n        var s_indicator = document.createElement(\"div\");\r\n        s_indicator.className = \"s_indicator\";\r\n        s_indicator.innerHTML = \"<div></div>\";\r\n        _.mainEle.appendChild(s_indicator);\r\n        _.s_indicator = _.mainEle.querySelector(\".s_indicator>div\");\r\n\r\n        for(var i= 0,l = this.length;i<l;i++){\r\n            insertHtml += \"<div></div>\"\r\n        }\r\n        _.s_indicator.innerHTML = insertHtml;\r\n\r\n        _.each(_.s_indicator.children,function(el){\r\n            this.classList.add(_.pointerClass);\r\n        });\r\n\r\n        //设置指示器宽度 居中\r\n        _.s_indicator.style.width = (_.s_indicator.children[0].getBoundingClientRect().width + 5) * _.length+\"px\";\r\n\r\n        //初始化第一个指示点选中\r\n        _.s_indicator.children[0].classList.add(_.pointerActiveClass);\r\n\r\n    };\r\n\r\n    Sturns.prototype.each = function(obj,fn){\r\n        for(var i= 0,l = obj.length;i<l;i++){\r\n            fn.call(obj[i],i,obj[i]);\r\n        }\r\n    };\r\n\r\n    Sturns.prototype.stop = function(obj,fn){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    };\r\n\r\n    //上一页\r\n    Sturns.prototype.prev = function(){\r\n        if(/*this.isBoundary &&*/!this.circle && this.currentIndex === 1){\r\n            return;\r\n        }else{\r\n            this.direction = \"rtl\";\r\n            this.run.call(this,this);\r\n        }\r\n    };\r\n\r\n    //下一页\r\n    Sturns.prototype.next = function(){\r\n        if(/*this.isBoundary &&*/ !this.circle && this.currentIndex === this.length){\r\n            return;\r\n        }else{\r\n            this.direction = \"ltr\";\r\n            this.run.call(this,this);\r\n        }\r\n    };\r\n\r\n    //校正中心模式下动画效果\r\n    var fixCenterMode = function(o){\r\n        //如果是居中模式，则前端和后端分别克隆两个节点\r\n        o.scrollEle.appendChild(o.scrollEle.children[2].cloneNode(true));\r\n        o.scrollEle.insertBefore(o.scrollEle.lastElementChild.previousElementSibling\r\n                        .previousElementSibling.previousElementSibling.cloneNode(true),\r\n                o.scrollEle.firstElementChild);\r\n\r\n        //标识为克隆节点对象\r\n        o.scrollEle.lastElementChild.previousElementSibling.classList.add(\"s_turnsClone\");\r\n        o.scrollEle.firstElementChild.nextElementSibling.classList.add(\"s_turnsClone\");\r\n    }\r\n\r\n    //指示器运作方法\r\n    var indicatorMove = function(obj){\r\n        var children = obj.s_indicator.children;\r\n        obj.each(children,function(){\r\n            this.classList.remove(obj.pointerActiveClass);\r\n        });\r\n        children[obj.currentIndex-1].classList.add(obj.pointerActiveClass);\r\n    }\r\n\r\n\r\n    // 运动函数\r\n    var run = function(obj){\r\n        //方向处理\r\n        obj.moveRange = obj.direction === \"rtl\" ? obj.pageSize : -obj.pageSize;\r\n\r\n        var beforeNum = (obj.currentIndex+(obj.centerMode?0:1))%obj.length+1;\r\n        //滚动前回调\r\n        obj.onScrollBeforeStart && obj.onScrollBeforeStart.call(obj,beforeNum);\r\n\r\n        //滚动时回调\r\n        obj.onScrollStart && obj.onScrollStart.call(obj,beforeNum);\r\n\r\n        //obj.animate && obj.scrollEle.classList.add(\"transition2s\");\r\n        obj.animate && obj.ani();\r\n\r\n        obj.setTransFn((obj.currentPage += (obj.moveRange))+obj.clipSize);\r\n        obj.prevPageIdx = obj.currentIndex;\r\n\r\n        //滚动后页数，无限滚动处理\r\n        setTimeout(function(){\r\n            var objLth = obj.length+2;\r\n            //obj.animate && obj.scrollEle.classList.remove(\"transition2s\");\r\n\r\n            //TODO\r\n            //从左向右滚动时，如果滚动到克隆页，则跳转到对应的非克隆页\r\n            if(obj.circle){\r\n                if(obj.currentPage == ((obj.centerMode?0:1)-objLth)*obj.pageSize) {\r\n                    obj.setTransFn(obj.clipSize - obj.fix.fixTOPage);\r\n                    obj.currentPage = -obj.fix.fixTOPage;\r\n                }\r\n                //从右向左滚动时，如果滚动到克隆页，则跳转到对应的非克隆页\r\n                if(obj.currentPage == -obj.fix.fixOZPage){\r\n                    obj.setTransFn(obj.clipSize-(objLth-(obj.centerMode?1:2))*obj.pageSize);\r\n                    obj.currentPage = -(objLth-(obj.centerMode?1:2))*obj.pageSize;\r\n                }\r\n\r\n            }else{\r\n                var ltrFlag = obj.currentPage == -(obj.fix.fixOZ+obj.length)*obj.pageSize,\r\n                        rtlFlag = obj.currentPage == -obj.fix.fixTOPage;\r\n\r\n                if(ltrFlag && obj.direction === \"ltr\"){\r\n                    obj.direction = \"rtl\";\r\n                }\r\n\r\n                //从右向左滚动时，如果滚动到克隆页，则跳转到对应的非克隆页\r\n                if(rtlFlag &&  obj.direction === \"rtl\"){\r\n                    obj.direction = \"ltr\";\r\n                }\r\n\r\n                if(ltrFlag || rtlFlag){\r\n                    obj.isBoundary = true;\r\n                }else{\r\n                    //边界标志位复原为false。\r\n                    obj.isBoundary = false;;\r\n                }\r\n            }\r\n\r\n            //计算当前页\r\n            obj.currentIndex = Math.abs((obj.currentPage+obj.fix.fixOZPage)/obj.pageSize);\r\n\r\n            //滚动完成时回调\r\n            obj.onScrollEnd && obj.onScrollEnd.call(obj,obj.currentIndex);\r\n\r\n            //指示器变动\r\n            obj.pointer && indicatorMove.call(obj,obj);\r\n\r\n            //给当前页设置 active类\r\n            obj.each(obj.pages,function(i,ele){\r\n                ele.classList.remove(obj.activeClass);\r\n            });\r\n\r\n            obj.each(obj.pages,function(i,ele){\r\n                if(+ele.dataset.sturnsIndex == obj.currentIndex &&\r\n                        !ele.classList.contains(\"s_turnsClone\")){\r\n                    ele.classList.add(obj.activeClass);\r\n                }\r\n            });\r\n        },obj.during);\r\n    }\r\n\r\n    return Sturns;\r\n});\r\n\r\n/**\r\n * Created by schoeu on 2015/3/3.\r\n */\r\n\r\nvar singleDemo = new Sturns(\".singleDemo\");\r\n\r\nvar singleDemoCenter = new Sturns(\".singleDemoCenter\",{\r\n    autoplay: false,\r\n    centerMode : true,\r\n    circle:false,\r\n});\r\n\r\nvar singleDemoV = new Sturns(\".singleDemoV\",{\r\n    autoplay: false,\r\n    circle:false,\r\n    isVertical:true,\r\n    pointer:false,\r\n    onScroll:function(idx,obj){\r\n        //console.log(\"第\"+idx+\"页， moveX: \"+obj.moveX+\" moveY: \"+obj.moveY);\r\n    }\r\n});\r\n\r\nvar singleDemoVCenter = new Sturns(\".singleDemoVCenter\",{\r\n    autoplay: false,\r\n    centerMode : true,\r\n    isVertical:true,\r\n});\r\n\r\nvar picDemo = new Sturns(\".picDemo\",{\r\n    centerMode : true,\r\n    isVertical:false,\r\n    centerModeScale: 0.6\r\n});\r\n\r\n</script>\r\n</body>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}